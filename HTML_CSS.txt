HTML固定结构
-------------------
• html标签：网页的整体
• head标签：网页的头部
• body标签：网页的身体
• title标签：网页的标题

骨架结构
-------------------
<html>
	<head>
		<title>网页的标题</title>
	</head>
	<body>
		自己的代码
	</body>
</html>

VS Code的基本快捷键
-------------------
1. 快速生成标签：英文 + tab
2. 保存文件：ctrl + s
3. 快速查看网页效果：右击 → Open in Default Browser
• 快捷键：alt + b
• 注意：必须安装了open in browser 插件

注释的快捷键：
• 在VS Code中：ctrl + /

HTML标签学习
-------------------
让文字强制换行显示：br
水平线标签：hr

第一组
	加粗：b
	下划线：u
	倾斜：i
	删除线：s

第二组：（推荐，语义更强）
	加粗：strong
	下划线：ins
	倾斜：em
	删除线：del

图片标签: img
属性:
	1、src：图片的路径
	2、alt：替换文本 只有当图片加载失败时，才会显示的文字
	3、title：图片的标题 鼠标悬停在图片上时，才会显示的文字
	4、width宽度/height高度 如果只设置了其中的一个，另一个会等比例缩放	 
注意点:
一般只会设置width或者height中的一个，
如果同时设置了两个，图片可能会拉伸变形

路径
-------------------
绝对路径:
	1、在个人电脑中，带有盘符的路径
	2、外部链接，以https://开头的路径

相对路径:
	同级目录
		1、直接写目标文件的名字
	下级目录
		1、写目标文件所在文件夹的名字
		2、进入目录文件夹 "/"
		3、直接写目标文件的名字即可
	上级目录
		1、去上一级目录 "../"
		2、直接写目标文件的名字即可
		
音频标签/视频标签		
-------------------	
audio/video
作用：在网页中插入音频
属性:
	1、src：视频的路径
	2、controls：播放的控件
	3、autoplay：自动播放
	4、loop：循环播放
	
链接标签 a
-------------------
href：告诉浏览器点击之后去哪一个网页
	取值：就是一个路径
	1、外部链接：直接写网址即可（网址需要写完整，https://）
	2、本地网页：直接写路径
	
target：设置跳转方式
	_self:默认值，在当前窗口中进行跳转，原网页不在了
	_blank：在新窗口中进行跳转，原网页还在
	
空链接：
	<a href="#">空链接</a>

在网页中按照行展示关联性的内容
如：新闻列表、排行榜、账单等

无序列表 ul li	
-------------------
 • ul标签中只允许包含li标签
 • li标签可以包含任意内容
 
有序列表 ol li
-------------------
 • ol标签中只允许包含li标签
 • li标签可以包含任意内容
 
自定义列表 dl dt dd 
-------------------
 • dl标签：表示自定义列表的整体
 • dt标签：表示自定义列表的主题
 • dd标签：表示对于主题的每一项内容
 
表格标签 table > tr > td
-------------------
 • table标签：表格整体
 • tr标签：表格每行
 • td标签：对于主题的每一项内容

表格相关属性
-------------------
 • border标签：边框宽度
 • width标签：表格宽度
 • height标签：表格高度
 • caption标签：表格大标题
 • th标签：表格一列小标题，通常第一行

表格的结构标签（了解）
-------------------
 • thead标签：表格头部
 • tbody标签：表格主体
 • tfoot标签：表格底部

合并单元格 
------------------- 
 • rowspan：跨行合并→垂直方向合并
 • colspan：跨列合并→水平方向合并
 
表单标签 input系列标签
-------------------
type属性值：text 
placeholder：占位符，提示用户输入类容文本

value属性：用户输入的内容，提交之后会发送给后端服务器
name属性：当前控件的含义，提交之后可以告诉后端发送过去的数据是什么含义
-------------------
type属性值：password

-------------------
type属性值：radio
 • name属性对于单选框有分组功能
 • 有相同name属性值的单选框为一组，一组中只能同时有一个被选中
-------------------
type属性值：checkbox
checked 默认选中

-------------------
type属性值：file
multiple：多文件选择

-------------------
type属性值：
submit 提交按钮
reset 重置按钮
button 普通按钮

select下拉菜单标签
-------------------
 • select标签：下拉菜单的整体
 • option标签：下拉菜单的每一项
 
textarea文本域标签
-------------------
 • cols：规定了文本域内可见宽度
 • rows：规定了文本域内可见行数
 注意点：
	• 右下角可以拖拽改变大小 
	• 实际开发时针对于样式效果推荐用CSS设置
	
label标签
-------------------
使用方法①：
	1. 使用label标签把内容（如：文本）包裹起来 
	2. 在表单标签上添加id属性 
	3. 在label标签的for属性中设置对应的id属性值
使用方法②： 
	1. 直接使用label标签把内容（如：文本）和表单标签一起包裹起来 
	2. 需要把label标签的for属性删除即可

没有语义的布局标签-div和span	
-------------------
场景：实际开发网页时会大量频繁的使用到div和span这两个没语义的布局标签
div标签：一行只显示一个（独占一行）
span标签：一行可以显示多个

语义化标签
-------------------
div：独占一行
span：一行中可以显示多

有语义的布局标签（了解）
-------------------
 • header：网页头部
 • nav：网页导航
 • footer：网页底部
 • aside：网页侧边栏
 • section：网页区块
 • article：网页文章
 
字符实体 
-------------------
空格的字符实体是
• &nbsp;
>的字符实体是
• &gt;
<的字符实体是？
• &lt;

CSS 语法规则
-------------------

常见属性：
	color: 文字颜色
	font-size:字体大小
	background-color：背景颜色
	width：宽度
	height：高度

CSS常见三种引入方式
-------------------
• 内嵌式
• 外联式
• 行内式

标签选择器
-------------------
结构：标签名 { css属性名：属性值； }
作用：通过标签名，找到页面中所有这类标签，设置样式

注意点：
	1. 标签选择器选择的是一类标签，而不是单独某一个
	2. 标签选择器无论嵌套关系有多深，都能找到对应的标签
	
类选择器	
-------------------
结构：.类名 { css属性名：属性值； }
作用：通过类名，找到页面中所有带有这个类名的标签，设置样式
注意点：
	1. 所有标签上都有class属性，class属性的属性值称为类名（类似于名字）
	2. 类名可以由数字、字母、下划线、中划线组成，但不能以数字或者中划线开头
	3. 一个标签可以同时有多个类名，类名之间以空格隔开
	4. 类名可以重复，一个类选择器可以同时选中多个标签
	
id选择器	
-------------------	
结构：#id属性值 { css属性名：属性值； }
作用：通过id属性值，找到页面中带有这个id属性值的标签，设置样式
注意点：
	1. 所有标签上都有id属性
	2. id属性值类似于身份证号码，在一个页面中是唯一的，不可重复的！
	3. 一个标签上只能有一个id属性值
	4. 一个id选择器只能选中一个标签
	
补充：类与id的区别

class类名与id属性值的区别
	• class类名相当于姓名，可以重复，一个标签可以同时有多个class类名
	• id属性值相当于身份证号码，不可重复，一个标签只能有一个id属性值

类选择器与id选择器的区别
	• 类选择器以 . 开头
	• id选择器以 # 开头	

实际开发的情况	
	• 类选择器用的最多
	• id一般配合js使用，除非特殊情况，否则不要使用id设置样式
	• 实际开发中会遇到冗余代码的抽取 （可以将一些公共的代码抽取到一个公共的类中去）
	
通配符选择器	
-------------------
结构：* { css属性名：属性值； }
作用：找到页面中所有的标签，设置样式
注意点：
1. 开发中使用极少，只会在极特殊情况下才会用到
2. 在基础班小页面中可能会用于去除标签默认的margin和padding（后续讲解）

基础选择器
-------------------
1. 选择器作用：选中页面中对应的标签（找她），方便后续设置样式（改她）
2. 标签选择器：标签名 { css属性名：属性值； }
3. 类选择器：.类名 { css属性名：属性值； }
4. id选择器：#id属性值 { css属性名：属性值； }
5. 通配符选择器：* { css属性名：属性值； }

-------------------
字体和文本样式
-------------------

字体大小
-------------------
属性名：font-size
取值：数字 + px
注意点：
	• 谷歌浏览器默认文字大小是16px
	• 单位需要设置，否则无效
	
字体粗细
-------------------
属性名：font-weight
取值：
• 关键字：
	正常：normal
	加粗：bold
	
纯数字：100~900的整百数：
	正常：400
	加粗：700
	
注意点：	
	• 不是所有字体都提供了九种粗细，因此部分取值页面中无变化
	• 实际开发中以：正常、加粗两种取值使用最多。
	
字体样式（是否倾斜）	
-------------------	
属性名：font-style
取值：
• 正常（默认值）：normal
• 倾斜：italic

常见字体系列（了解）
-------------------
无衬线字体（sans-serif）
1. 特点：文字笔画粗细均匀，并且首尾无装饰
2. 场景：网页中大多采用无衬线字体
3. 常见该系列字体：黑体、Arial

衬线字体（serif）
1. 特点：文字笔画粗细不均，并且首尾有笔锋装饰
2. 场景：报刊书籍中应用广泛
3. 常见该系列字体：宋体、Times New Roman

等宽字体（monospace）
1. 特点：每个字母或文字的宽度相等
2. 场景：一般用于程序代码编写，有利于代码的阅读和编写
3. 常见该系列字体：Consolas、fira code

-------------------
字体和文本样式
-------------------

字体系列 font-family
-------------------
渲染规则：
1. 从左往右按照顺序查找，如果电脑中未安装该字体，则显示下一个字体
2. 如果都不支持，此时会根据操作系统，显示最后字体系列的默认字体

注意点：
1. 如果字体名称中存在多个单词，推荐使用引号包裹
2. 最后一项字体系列不需要引号包裹
3. 网页开发时，尽量使用系统常见自带字体，保证不同用户浏览网页都可以正确显示

字体font相关属性的连写
-------------------
属性名：font (复合属性)
取值：
	• font : style weight size family;
省略要求：
	• 只能省略前两个，如果省略了相当于设置了默认值
	
注意点：如果需要同时设置单独和连写形式
	• 要么把单独的样式写在连写的下面
	• 要么把单独的样式写在连写的里面

字体大小： font-size
-------------------
• 数字+px	

字体粗细：font-weight
-------------------
• 正常：normal 或 400
• 加粗：bold 或 700

字体样式：font-style
-------------------
• 正常：normal
• 倾斜：italic

字体系列：font-family
-------------------
• 具体字体1,具体字体2,具体字体3,具体字体4,...,字体系列

字体连写：font
-------------------
• font : style weight size family;


文本缩进
-------------------
属性名：text-indent
取值：
• 数字+px
• 数字+em（推荐：1em = 当前标签的font-size的大小）

 文本水平对齐方式
-------------------
属性名：text-align
取值：
left：左对齐
center：剧中对齐
right：右对齐

• 如果需要让文本水平居中，text-align属性给文本所在标签（文本的父元素）设置

水平居中方法总结 text-align : center
-------------------
text-align : center 能让哪些元素水平居中


文本修饰
-------------------
underline:下滑线(常用)
line-through:(不常用)
overline：上划线(几乎不用)
none:无装饰线

• 开发中会使用 text-decoration : none ; 清除a标签默认的下划线

line-height行高
-------------------
作用：控制一行的上下行间距
取值：
• 数字+px
• 倍数（当前标签font-size的倍数）
应用：
1. 让单行文本垂直居中可以设置 line-height : 文字父元素高度
2. 网页精准布局时，会设置 line-height : 1 可以取消上下间距
行高与font连写的注意点：
• 如果同时设置了行高和font连写，注意覆盖问题
• font : style weight size/line-height family ;

后代选择器：空格
-------------------
作用：根据 HTML 标签的嵌套关系，选择父元素 后代中 满足条件的元素
选择器语法：选择器1 选择器2 { css }
结果：
• 在选择器1所找到标签的后代（儿子、孙子、重孙子…）中，找到满足选择器2的标签，设置样式
注意点：
1. 后代包括：儿子、孙子、重孙子……
2. 后代选择器中，选择器与选择器之前通过 空格 隔开

子代选择器：>
-------------------
作用：根据 HTML 标签的嵌套关系，选择父元素 子代中 满足条件的元素
选择器语法：选择器1 > 选择器2 { css }
结果：
• 在选择器1所找到标签的子代（儿子）中，找到满足选择器2的标签，设置样式
注意点：
1. 子代只包括：儿子
2. 子代选择器中，选择器与选择器之前通过 > 隔开

并集选择器：,
-------------------
作用：同时选择多组标签，设置相同的样式
选择器语法：选择器1 ， 选择器2 { css }
结果：
• 找到 选择器1 和 选择器2 选中的标签，设置样式
注意点：
1. 并集选择器中的每组选择器之间通过 , 分隔
2. 并集选择器中的每组选择器可以是基础选择器或者复合选择器
3. 并集选择器中的每组选择器通常一行写一个，提高代码的可读性

交集选择器：紧挨着
-------------------
作用：选中页面中 同时满足 多个选择器的标签
选择器语法：选择器1选择器2 { css }
结果：
• （既又原则）找到页面中 既 能被选择器1选中，
又 能被选择器2选中的标签，设置样式

注意点：
1. 交集选择器中的选择器之间是紧挨着的，没有东西分隔
2. 交集选择器中如果有标签选择器，标签选择器必须写在最前面

hover伪类选择器
-------------------
作用：选中鼠标悬停在元素上的状态，设置样式
选择器语法：选择器:hover { css }
注意点：
1. 伪类选择器选中的元素的某种状态

Emmet语法
-------------------
作用：通过简写语法，快速生成代码
标签名: div  <div></div>
类选择器: .red <div class="red"></div>
id选择器: #one <div id="one"></div>
交际选择器: p.red#one <p class="red" id="one"></p>
子代选择器: ul>li <ul><li></li></ul>
内部文本: ul>li{我是li的内容} <ul><li>我是li的内容</li></ul>
创建多个: ul>li*2 <ul><li></li><li></li></ul>

背景颜色
-------------------
属性名：background-color（bgc）
属性值：
• 颜色取值：关键字、rgb表示法、rgba表示法、十六进制……
注意点：
• 背景颜色默认值是透明： rgba(0,0,0,0) 、transparent
• 背景颜色不会影响盒子大小，并且还能看清盒子的大小和位置，
一般在布局中会习惯先给盒子设置背景颜色

背景图片
-------------------
属性名：background-image（bgi）
属性值：background-image:url('图片路径');
注意点：
• 背景图片中url中可以省略引号
• 背景图片默认是在水平和垂直方向平铺的
• 背景图片仅仅是指给盒子起到装饰效果，
类似于背景颜色，是不能撑开盒子的

背景平铺
-------------------
属性名：background-repeat（bgr）
属性值：
	repeat 默认 水平和垂直方向平铺
	no-repeat 不平铺
	repeat-x 沿着水平方向 x轴 平铺
	repeat-y 沿着垂直方向 y轴 平铺

背景位置
-------------------
属性名：background-position（bgp）
属性值方向名词：
	水平方向：
		left
		center
		right
	垂直方向：
		top
		center
		botton
		
属性值数字+px（坐标）：
	坐标系:
		原点（0,0）
		x轴 水平向右
		y轴 垂直向下
	操作：
		将图片左上角与坐标点重合即可

background（bg）		
-------------------
属性值：
• 单个属性值的合写，取值之间以空格隔开
书写顺序：
• 推荐：background：color image repeat position
省略问题：
• 可以按照需求省略
• 特殊情况：在pc端，
如果盒子大小和背景图片大小一样，
此时可以直接写 background：url()
注意点
• 如果需要设置单独的样式和连写
• ① 要么把单独的样式写在连写的下面
• ② 要么把单独的样式写在连写的里面


（拓展）img标签和背景图片的区别
-------------------
需求：需要在网页中展示一张图片的效果
方法一：直接写上img标签即可
• img标签是一个标签，不设置宽高默认会以原尺寸显示
方法二：div标签 + 背景图片
• 需要设置div的宽高，因为背景图片只是装饰的CSS样式，不能撑开div标签

-------------------
元素显示模式		
-------------------

块级元素
-------------------
显示特点：
1. 独占一行（一行只能显示一个）
2. 宽度默认是父元素的宽度，高度默认由内容撑开
3. 可以设置宽高

代表标签：
div、p、h系列、ul、li、dl、dt、
dd、form、header、nav、footer……

行内元素
-------------------
显示特点：
1. 一行可以显示多个
2. 宽度和高度默认由内容撑开
3. 不可以设置宽高

代表标签：
• a、span 、b、u、i、s、strong、
ins、em、del……

行内块元素
-------------------
显示特点：
1. 一行可以显示多个
2. 可以设置宽高

代表标签：
• input、textarea、button、select……
• 特殊情况：img标签有行内块元素特点，
但是Chrome调试工具中显示结果是inline

元素显示模式转换
-------------------
目的：改变元素默认的显示特点，让元素符合布局要求

display:block  转换成块级元素  使用较多
display:inline-block 转换成行内快元素 使用较多
display:inline 转换成行内元素  极少使用

HTML嵌套规范注意点
-------------------
块级元素一般作为大容器，可以嵌套：

文本、块级元素、行内元素、行内块元素等等……
但是：p标签中不要嵌套div、p、h等块级元素

a标签内部可以嵌套任意元素
但是：a标签不能嵌套a标签

-------------------
居中方法总结
-------------------

水平剧中
text-align:center; 
-------------------
1.文本
2.行内元素 span,a
3.多内块元素 input,img
如果要让以上元素水平剧中，
此时直接设置父元素即可

margin:0 auto;
-------------------
1.块级元素
注意点：直接给当前元素设置

垂直剧中
-------------------
line-height 当行文本

-------------------
CSS 特性
-------------------

可以继承的常见属性
-------------------
1. color
2. font-style、font-weight、font-size、font-family
3. text-indent、text-align
4. line-height

注意点：
• 可以通过调试工具判断样式是否可以继承

层叠性
-------------------
特性：
	1. 给同一个标签设置不同的样式 →
	此时样式会层叠叠加 → 
	会共同作用在标签上
	2. 给同一个标签设置相同的样式 → 
	此时样式会层叠覆盖 → 
	最终写在最后的样式会生效
	
注意点：
1. 当样式冲突时，
只有当选择器优先级相同时，
才能通过层叠性判断结果


-------------------