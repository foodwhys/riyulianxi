额外四个快捷键/组合键小技巧
➢ tab键 ：在 Bash 解释器的快捷键中，它能够实现对命令、参数或文件的内容补全

➢ Ctrl+C组合键 ：当同时按下键盘上的 Ctrl 和字母 C 的时候，意味着终止当前进程的运行。

➢ Ctrl+D组合键：当同时按下键盘上的 Ctrl 和字母 D 的时候，表示键盘输入结束。

➢ Ctrl+l组合键：当同时按下键盘上行的 Ctrl 和字母 l 的时候，会清空当前终端中已有的内容
（相当于清屏操作）

执行命令的必备知识
-----------------------------------
参数可以用长格式（完整的选项名称）
长格式 man –-help
也可以用短格式（单个字母的缩写）
短格式 man -h
1.长格式和长格式之间不能合并
2.长格式和短格式之间也不能合并间不能合并
3.但短格式和短格式之间是可以合并的，合并后仅保留一个减号（-）即可

man 命令中常用按键及其作用
-----------------------------------
空格键 向下翻一页
PaGe down 向下翻一页
PaGe up 向上翻一页
home 直接前往首页
end 直接前往尾页
/ 从上至下搜索某个关键词，如“/linux”
? 从下至上搜索某个关键词，如“?linux”
n 定位到下一个搜索到的关键词
N 定位到上一个搜索到的关键词
q 退出帮助文档

man 命令中帮助信息的结构及其代表意义
-----------------------------------
NAME 命令的名称
SYNOPSIS 参数的大致使用方法
DESCRIPTION 介绍说明
EXAMPLES 演示（附带简单说明）
OVERVIEW 概述
DEFAULTS 默认的功能
OPTIONS 具体的可用选项（带介绍）
ENVIRONMENT 环境变量
FILES 用到的文件
SEE ALSO 相关的资料
HISTORY 维护历史与联系方式

-----------------------------------
2.3常用系统工作命令
-----------------------------------
1.echo 命令
-----------------------------------
用于在终端设备上输出字符串或变量提取后的值

2.date 命令
-----------------------------------
用于显示或设置系统的时间与日期，语法格式为“date [+指定的格式]”。

date 命令中的参数及其作用:
%S 秒（00～59）
%M 分钟（00～59）
%H 小时（00～23）
%I 小时（00～12）
%m 月份（1～12）
%p 显示出 AM 或 PM
%a 缩写的工作日名称（例如，Sun）
%A 完整的工作日名称（例如，Sunday）
%b 缩写的月份名称（例如，Jan）
%B 完整的月份名称（例如，January）
%q 季度（1～4）
%y 简写年份（例如，20）

%Y 完整年份（例如，2020）
%d 本月中的第几天
%j 今年中的第几天
%n 换行符（相当于按下回车键）
%t 跳格（相当于按下 Tab 键）

[root@linuxprobe~]# date
Sat Sep 5 09:13:45 CST 2020

[root@linuxprobe~]# date "+%Y-%m-%d %H:%M:%S"
2020-09-05 09:14:35

timedatectl 命令
-----------------------------------
用于设置系统的时间
英文全称为“time date control”，语法格式为“timedatectl [参数]”。

timedatectl 命令中的参数以及作用:
status 显示状态信息
list-timezones 列出已知时区
set-time 设置系统时间
set-timezone 设置生效时区

[root@linuxprobe~]# timedatectl status
Local time: Sun 2020-09-06 19:51:22 CST
Universal time: Sun 2020-09-06 11:51:22 UTC
RTC time: Sun 2020-09-06 19:51:21
Time zone: Asia/Shanghai (CST, +0800)
System clock synchronized: no
NTP service: inactive
RTC in local TZ: no

[root@linuxprobe~]# timedatectl set-timezone Asia/Shanghai

4.reboot 命令
-----------------------------------
用于重启系统，输入该命令后按回车键执行即可
[root@linuxprobe~]# reboot

5.poweroff命令
-----------------------------------
用于关闭系统，输入该命令后按回车键执行即可。
[root@linuxprobe~]# poweroff

6.wget 命令
-----------------------------------
用于在终端命令行中下载网络文件，
英文全称为“web get”，语法格式为“wget [参数] 网址”。

wget 命令中的参数以及作用
-b 后台下载模式
-P 下载到指定目录
-t 最大尝试次数
-c 断点续传
-p 下载页面内所有资源，包括图片、视频等
-r 递归下载

7.ps 命令
-----------------------------------
用于查看系统中的进程状态，
英文全称为“processes”，语法格式为“ps [参数]”。

-a 显示所有进程（包括其他用户的进程）
-u 用户以及其他详细信息
-x 显示没有控制终端的进程

 Linux 系统中有 5 种常见的进程状态，
 分别为运行、中断、不可中断、僵死与停止，其各自含义如下所示。
➢ R（运行）：进程正在运行或在运行队列中等待。
➢ S（中断）：进程处于休眠中，当某个条件形成后或者接收到信号时，则脱离该 状态。
➢ D（不可中断）：进程不响应系统异步信号，即便用 kill 命令也不能将其中断。
➢ Z（僵死） ：进程已经终止，但进程描述符依然存在, 直到父进程调用 wait4()系统函数后将进程释放。
➢ T（停止）：进程收到停止信号后停止运行。

当执行 ps aux 表头含义：
USER ：进程的所有者
PID ：进程ID 号
%CPU ：运算器占用率
%MEM ：内存占用率
VSZ ：虚拟内存使用量（单位是 KB）
RSS ：占用的固定内存量（单位是KB）
TTY ：所在终端
STAT ：进程状态
START ：被启动的时间
TIME ：实际使用 CPU的时间
COMMAND ：命令名称与参数

8.pstree 命令
-----------------------------------
用于以树状图的形式展示进程之间的关系，英文全称为“process tree”，输入
该命令后按回车键执行即可。

9.top 命令
-----------------------------------
用于动态地监视进程活动及系统负载等信息，输入该命令后按回车键执行即可。

➢ 第 1 行：系统时间、运行时间、登录终端数、系统负载（3 个数值分别为 1 分钟、5分钟、15 分钟内的平均值，数值越小意味着负载越低）。
➢ 第 2 行：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数。
➢ 第 3 行：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲的资源百分比等。其中数据均为 CPU 数据并以百分比格式显示，例如“99.9 id”意味着有 99.9%的 CPU 处理器资源处于空闲。
➢ 第 4 行：物理内存总量、内存空闲量、内存使用量、作为内核缓存的内存量。
➢ 第 5 行：虚拟内存总量、虚拟内存空闲量、虚拟内存使用量、已被提前加载的内存量。

10.nice 命令
-----------------------------------
用于调整进程的优先级，语法格式为“nice 优先级数字 服务名称”。

数字越低（取值范围是-20～19），优先级越高
[root@linuxprobe~]# nice -n -20 bash
[root@linuxprobe~]#

11.pidof 命令
-----------------------------------
用于查询某个指定服务进程的 PID 号码值，语法格式为“pidof [参数] 服务名称”

12.kill命令
-----------------------------------
用于终止某个指定 PID 值的服务进程，语法格式为“kill [参数] 进程的 PID”。

13.killall 命令
-----------------------------------
用于终止某个指定名称的服务所对应的全部进程，
语法格式为“killall [参数] 服务名称”。

-----------------------------------
2.4系统状态检测命令
-----------------------------------

1.ifconfig 命令
-----------------------------------
用于获取网卡配置与网络状态等信息，
英文全称为“interface config”，语法格式为“ifconfig [参数] [网络设备]”。

2.uname 命令
-----------------------------------
用于查看系统内核版本与系统架构等信息，
英文全称为“unix name”，语法格式为“uname [-a]”。

[root@linuxprobe~]# uname -a
Linux linuxprobe.com 4.18.0-80.el8.x86_64 #1 SMP Wed Mar 13 12:02:46 UTC 2019
x86_64 x86_64 x86_64 GNU/Linux

3.uptime 命令
-----------------------------------
用于查看系统的负载信息，输入该命令后按回车键执行即可。

4.free 命令
-----------------------------------
用于显示当前系统中内存的使用量信息，语法格式为“free [-h]”。

[root@linuxprobe~]# free -h
     Total used free shared buffers buff/cache available
Mem： 1.9Gi 1.4Gi 99Mi 20Mi 450Mi 348Mi
Swap： 2.0Gi 80Mi 1.9Gi

Total：内存总量
used：已用量
free：空闲量
shared：进程功效的内存量
buffers：磁盘缓存的内存量
buff/cache：缓存的内存量
available：可用内存量

5.who 命令
-----------------------------------
用于查看当前登入主机的用户终端信息，输入该命令后按回车键执行即可。

6.last 命令
-----------------------------------
用于调取主机的被访记录，输入该命令后按回车键执行即可

7.ping 命令
-----------------------------------
用于测试主机之间的网络连通性，语法格式为“ping [参数] 主机地址”。

8.tracepath 命令
-----------------------------------
用于显示数据包到达目的主机时途中经过的所有路由信息，
语法格式为“tracepath [参数] 域名”。

9.netstat 命令
-----------------------------------
用于显示如网络连接、路由表、接口状态等的网络相关信息，
英文全称为“network status”，语法格式为“netstat [参数]”。

netstat 命令中的参数以及作用:
-a 显示所有连接中的 Socket
-p 显示正在使用的 Socket 信息
-t 显示 TCP 协议的连接状态
-u 显示 UDP 协议的连接状态

-n 使用 IP 地址，不使用域名
-l 仅列出正在监听的服务状态
-i 现在网卡列表信息
-r 显示路由表信息

10.history 命令
-----------------------------------
history 命令用于显示执行过的命令历史，语法格式为“history [-c]”。

11.sosreport 命令
-----------------------------------
sosreport 命令用于收集系统配置及架构信息并输出诊断文档，
输入该命令后按回车键执行即可。

-----------------------------------
2.5查找定位文件命令
-----------------------------------

1.pwd 命令
-----------------------------------
用于显示用户当前所处的工作目录，
英文全称为“print working directory”，
输入该命令后按回车键执行即可。

2.cd 命令
-----------------------------------
cd 命令用于切换当前的工作路径，
英文全称为“change directory”，语法格式为“cd [参数] [目录]”。

3.ls 命令
-----------------------------------
ls 命令用于显示目录中的文件信息，英文全称为“list”，
语法格式为“ls [参数] [文件名称]”。

4.tree 命令
-----------------------------------
tree 命令用于以树状图的形式列出目录内容及结构，
输入该命令后按回车键执行即可。

5.find 命令
-----------------------------------
用于按照指定条件来查找文件所对应的位置，
语法格式为“find [查找范围] 寻找条件”。

-name 匹配名称
-perm 匹配权限（mode 为完全匹配，-mode 为包含即可）
-user 匹配所有者
-group 匹配所属组
-mtime -n +n 匹配修改内容的时间（-n 指 n 天以内，+n 指 n 天以前）
-atime -n +n 匹配访问文件的时间（-n 指 n 天以内，+n 指 n 天以前）
-ctime -n +n 匹配修改文件权限的时间（-n 指 n 天以内，+n 指 n 天以前）
-nouser 匹配无所有者的文件
-nogroup 匹配无所属组的文件
-newer f1 !f2 匹配比文件 f1 新但比 f2 旧的文件
--type b/d/c/p/l/f 匹配文件类型（后面的字母依次表示块设备、目录、字符设备、管道、链接文件、文本文件）
-size 匹配文件的大小（+50KB为查找超过50KB的文件，而-50KB为查找小于50KBs的文件）
-prune 忽略某个目录
-exec…… {}\; 后面可跟用于进一步处理搜索结果的命令（下文会有演示）

6.locate 命令
-----------------------------------
locate 命令用于按照名称快速搜索文件所对应的位置，
语法格式为“locate 文件名称”。

7.whereis 命令
-----------------------------------
whereis 命令用于按照名称快速搜索二进制程序（命令）、
源代码以及帮助文件所对应的位置，语法格式为“whereis 命令名称”。

8.which 命令
-----------------------------------
用于按照指定名称快速搜索二进制程序（命令）所对应的位置，
语法格式为“which 命令名称”。

-----------------------------------
2.6 文本文件编辑命令
-----------------------------------

1.cat 命令
-----------------------------------
用于查看纯文本文件（内容较少的），
英文全称为“concatenate”，语法格式为“cat [参数] 文件名称”。

2.more 命令
-----------------------------------
用于查看纯文本文件（内容较多的），语法格式为“more [参数] 文件名称”。

3.head 命令
-----------------------------------
用于查看纯文本文件的前 N 行，语法格式为“head [参数] 文件名称”。

tail 命令
-----------------------------------
用于查看纯文本文件的后 N 行或持续刷新文件的最新内容，
语法格式为“tail [参数] 文件名称”。

5.tr 命令
-----------------------------------
用于替换文本内容中的字符，英文全称为“translate”，
语法格式为“tr [原始字符] [目标字符]”。

把某个文本内容中的英文全部替换为大写：

[root@linuxprobe~]# cat anaconda-ks.cfg | tr [a-z] [A-Z]
#VERSION=RHEL8
IGNOREDISK --ONLY-USE=SDA
AUTOPART --TYPE=LVM
# PARTITION CLEARING INFORMATION
CLEARPART --ALL --INITLABEL --DRIVES=SDA
# USE GRAPHICAL INSTALL
GRAPHICAL
REPO --NAME="APPSTREAM" --BASEURL=FILE:///RUN/INSTALL/REPO/APPSTREAM

6.wc 命令
-----------------------------------
wc 命令用于统计指定文本文件的行数、
字数或字节数，英文全称为“word counts”，语法格式为“wc [参数] 文件名称”。

wc 命令中的参数以及作用:
-l 只显示行数
-w 只显示单词数
-c 只显示字节数

7.stat 命令
-----------------------------------
stat 命令用于查看文件的具体存储细节和时间等信息，
英文全称为“status”，语法格式为“stat 文件名称”。

Access Time（内容最后一次被访问的时间，简称为 Atime）
Modify Time（内容最后一次被修改的时间，简称为 Mtime）
Change Time（文件属性最后一次被修改的时间，简称为 Ctime）

[root@linuxprobe ~]# stat anaconda-ks.cfg
File: anaconda-ks.cfg
Size: 1407 Blocks: 8 IO Block: 4096 regular file
Device: fd00h/64768d Inode: 35321091 Links: 1
Access: (0600/-rw-------) Uid: ( 0/ root) Gid: ( 0/ root)
Context: system_u:object_r:admin_home_t:s0
Access: 2020-07-21 05:16:52.347279499 +0800
Modify: 2020-07-21 05:09:16.421009316 +0800
Change: 2020-07-21 05:09:16.421009316 +0800

8.grep 命令
-----------------------------------
用于按行提取文本内容，语法格式为“grep [参数] 文件名称”。

grep 命令中的参数及其作用

-b 将可执行文件（binary）当作文本文件（text）来搜索
-c 仅显示找到的行数
-I 忽略大小写
-n 显示行号
-v 反向选择—仅列出没有“关键词”的行

9.cut 命令
-----------------------------------
令用于按“列”提取文本内容，语法格式为“cut [参数] 文件名称”。

每一项值之间是采用冒号来间隔的，先查看一下：
[root@linuxprobe~]# head -n 2 /etc/passwd
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin

提取出 passwd 文件中的用户名信息，即提取以冒号（：）
为间隔符号的第一列内容：

[root@linuxprobe~]# cut -d : -f 1 /etc/passwd
root
bin
daemon
adm
lp
sync
shutdown
halt
mail
operator
games
ftp
nobody
dbus

10.diff 命令
-----------------------------------
用于比较多个文件之间内容的差异，英文全称为“different”，
语法格式为“diff [参数] 文件名称 A 文件名称 B”。

有-c 参数的 diff 命令来描述文件内容具体的不同：
[root@linuxprobe~]# diff -c diff_A.txt diff_B.txt

11.uniq 命令
-----------------------------------
uniq 命令用于去除文本中连续的重复行，
英文全称为“unique”，语法格式为“uniq [参数] 文件名称”。

12.sort 命令
-----------------------------------
sort 命令用于对文本内容进行再排序，语法格式为“sort [参数] 文件名称”。

sort 命令中的参数及其作用:
-f 忽略大小写
-b 忽略缩进与空格
-n 以数值型排序
-r 反向排序
-u 去除重复行
-t 指定间隔符
-k 设置字段范围

-----------------------------------
2.7 文件目录管理命令
-----------------------------------

1.touch 命令
-----------------------------------
用于创建空白文件或设置文件的时间，语法格式为“touch [参数] 文件名称”。

touch 命令中的参数及其作用
-a 仅修改“访问时间”（Atime）
-m 仅修改“修改时间”（Mtime）
-d 同时修改Atime与Mtime

2.mkdir 命令
-----------------------------------
用于创建空白的目录，英文全称为“make directory”，
语法格式为“mkdir [参数] 目录名称”。

3.cp 命令
-----------------------------------
用于复制文件或目录，英文全称为“copy”，
语法格式为“cp [参数] 源文件名称 目标文件名称”。


➢ 如果目标文件是目录，则会把源文件复制到该目录中；
➢ 如果目标文件也是普通文件，则会询问是否要覆盖它；
➢ 如果目标文件不存在，则执行正常的复制操作。

-p 保留原始文件的属性
-d 若对象为“链接文件”，则保留该“链接文件”的属性
-r 递归持续复制（用于目录）
-i 若目标文件存在则询问是否覆盖
-a 相当于-pdr（p、d、r 为上述参数）

4.mv命令
-----------------------------------
用于剪切或重命名文件，英文全称为“move”，
语法格式为“mv [参数] 源文件名称 目标文件名称”。

5.rm 命令
-----------------------------------
用于删除文件或目录，英文全称为“remove”，
语法格式为“rm [参数] 文件 名称”。

rm 命令中的参数及其作用:
-f 强制执行
-i 删除前询问
-r 删除目录
-v 显示过程

6.dd 命令
-----------------------------------
用于按照指定大小和个数的数据块来复制文件或转换文件，
语法格式为“dd if=参数值 of=参数值 count=参数值 bs=参数值”

dd 命令中的参数及其作用
if 输入的文件名称
of 输出的文件名称
bs 设置每个“块”的大小
count 设置要复制“块”的个数

[root@linuxprobe~]# dd if=/dev/zero of=560_file count=1 bs=560M
1+0 records in
1+0 records out
587202560 bytes (587 MB, 560 MiB) copied, 1.28667 s, 456 MB/s


7.file 命令
-----------------------------------
用于查看文件的类型，语法格式为“file 文件名称”。

8.tar 命令
-----------------------------------
用于对文件进行打包压缩或解压，语法格式为“tar 参数 文件名称”。

tar 命令中的参数及其作用
-c 创建压缩文件
-x 解开压缩文件
-t 查看压缩包内有哪些文件
-z 用 gzip 压缩或解压
-j 用 bzip2 压缩或解压
-v 显示压缩或解压的过程
-f 目标文件名
-p 保留原始的权限与属性
-P 使用绝对路径来压缩
-C 指定解压到的目录

-----------------------------------
管道符、重定向与环境变量
-----------------------------------

➢ 标准输入重定向（STDIN，文件描述符为0）：默认从键盘输入，也可从其他文件或命令中输入
➢ 标准输出重定向（STDOUT，文件描述符为1）：默认输出到屏幕。
➢ 错误输出重定向（STDERR，文件描述符为2）：默认输出到屏幕。

输入重定向中用到的符号及其作用：
命令 < 文件 将文件作为命令的标准输入
命令 << 分界符 从标准输入中读入，直到遇见分界符才停止
命令 < 文件 1 > 文件 2 将文件 1 作为命令的标准输入并将标准输出到文件 2

输出重定向中用到的符号及其作用：
命令 > 文件 将标准输出重定向到一个文件中（清空原有文件的数据）
命令 2> 文件 将错误输出重定向到一个文件中（清空原有文件的数据）
命令 >> 文件 将标准输出重定向到一个文件中（追加到原有内容的后面）
命令 2>> 文件 将错误输出重定向到一个文件中（追加到原有内容的后面）
命令 >> 文件 2>&1 将标准输出与错误输出共同写入到文件中（追加到原有内容的后面）
命令 &>> 文件 将标准输出与错误输出共同写入到文件中（追加到原有内容的后面）


管道命令符
-----------------------------------
把前一个命令原本要输出的屏幕的信息当作后一个命令的标准输入
同时按下键盘上的 Shift+反斜杠（\）键即可输入管道符，其执行格式为“命令 A | 命令 B”。

