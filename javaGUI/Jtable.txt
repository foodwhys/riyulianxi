在上面实现的简单表格中，大概有如下几个功能：

1. 当表格高度不足以显示所有的数据行时，该表格会自动显示滚动条 。
2. 把鼠标移动到两列之间的分界符时，鼠标形状会变成可调整大小的形状，表明用户可以自由调整表格列的大小 。
3. 在表格列上按下鼠标并拖动时，可以将表格的整列拖动到其他位置 。
4. 当单击某一个单元格时，系统会自动选中该单元格所在的行 。    
5. 当双击某一个单元格时，系统会自动进入该单元格的修改状态 。    

**JTable调整列：**

JTable提供了一个setAutoResizeMode(int mode)方法用来调整表格的格式，该方法可以接收下面几个值：

1. JTable.AUTO_RESIZE_OFF: 关闭表格的自动调整功能。当调整某一列的宽度时，其他列的宽度不会发生变化；
2. JTable.AUTO_RESIZE_NEXT_COLUMN:只调整下一列的宽度，其他列及表格的宽度不会发生改变；
3. JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS:平均调整当前列后面所有列的宽度，当前列的前面所有列及表格的宽度都不会发生变化，这是默认的调整方式
4. JTable.AUTO_RESIZE_LAST_COLUMN:只调整最后一列的宽度，其他列及表格的宽度不会发生变化；
5. JTable.AUTO_RESIZE_ALL_COLUMNS:平均调整表格中所有列的宽度，表格的宽度不会发生改变

如果需要精确控制每一列的宽度，则可通过 TableColumn 对象来实现 。
 JTable 使用 TableColumn 来表示表格中的每一列，
 JTable 中表格列的所有属性，如最佳宽度、是否可调整宽度、最小和最大宽度等都保存在该 TableColumn 中 。
 此外， TableColumn 还允许为该列指定特定的单元格绘制器和单元格编辑器(这些内容将在后面讲解) 。
 TableColumn 具有如下方法 。

1. setMaxWidth(int maxWidth): 设置该列的最大宽度 。 如果指定的 maxWidth 小于该列的最小宽度， 则 maxWidth 被设置成最小宽度 。    
2. setMinWidth(int minWidth): 设置该列的最小宽度 。
3. setPreferredWidth(int preferredWidth): 设置该列的最佳宽度 。
4. setResizable(boolean isResizable): 设置是否可以调整该列的 宽度 。
5. sizeWidthToFit(): 调整该列的宽度，以适合其标题单元格的 宽度 。

### TableModel和监听器

与 JList、 JTree 类似的是 ， JTable 采用了 TableModel 来保存表格中的所有状态数据 : 
与 ListModel类似的是， TableModel 也不强制保存该表格显示的数据 。 
虽然在前面程序中看到的是直接利用 一个二维数组来创建 JTable 对象，但也可以通过 TableModel 对象来创建表格。

**使用TableModel步骤：**

1. 自定义类，继承AbstractTableModel抽象类，重写下面几个方法：

```java
int getColumnCount():返回表格列的数量
int getRowCount()：返回表格行的数量
Object getValueAt(int rowIndex, int columnIndex)：返回rowIndex行，column列的单元格的值
String getColumnName(int columnIndex)：返回columnIndex列的列名称
boolean isCellEditable(int rowIndex, int columnIndex)：设置rowIndex行，columnIndex列单元格是否可编辑
setValueAt(Object aValue, int rowIndex, int columnIndex)：设置rowIndex行，columnIndex列单元格的值
```
